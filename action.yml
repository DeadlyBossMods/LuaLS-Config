name: luals-dbm-checker
description: Runs the LuaLS check command with the DBM plugin loaded.
branding:
  icon: check-square
  color: yellow

inputs:
  extra-args:
    description: "Extra parameters passed to LuaLS"
    default: ""
  luals-repo:
    description: "Where to clone lua-language-server from"
    default: LuaLS/lua-language-server
  luals-ref:
    description: "Which branch, tag, or commit to use for LuaLS"
    required: true
  luals-check-dir:
    description: "Directory to check"
    required: true

runs:
  using: composite
  steps:
    - name: Cache LuaLS
      id: cache-luals
      uses: actions/cache@v4
      env:
        cache-name: luals
      with:
        path: ${{ github.workspace }}/luals
        key: ${{ inputs.luals-repo }}/${{ inputs.luals-ref }}
    - if: ${{ steps.cache-luals.outputs.cache-hit != 'true' }}
      name: "Install LuaLS build dependencies"
      shell: sh
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update
        sudo apt-get install -y ninja-build
    - if: ${{ steps.cache-luals.outputs.cache-hit != 'true' }}
      name: Checkout LuaLS
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.luals-repo }}
        ref: ${{ inputs.luals-ref }}
        submodules: recursive
        path: ./luals
    - if: ${{ steps.cache-luals.outputs.cache-hit != 'true' }}
      name: Compile LuaLS
      shell: bash
      run: |
        cd ${{ github.workspace }}/luals
        pushd 3rd/luamake
        ./compile/build.sh
        popd
        ./3rd/luamake/luamake -notest rebuild
        rm -rf test # reduces cache size by ~40%
    - name: Checkout LuaLS config
      uses: actions/checkout@v4
      with:
        repository: DeadlyBossMods/LuaLS-Config
        path: ./luals-config
    - name: Checkout DBM main repo
      uses: actions/checkout@v4
      with:
        repository: DeadlyBossMods/DeadlyBossMods
        path: ./DBM-Main-Repo
    - name: Checkout vscode-wow-api
      uses: actions/checkout@v4
      with:
        repository: Ketho/vscode-wow-api
        path: ./vscode-wow-api
    - name: Run checks
      shell: bash
      run: |
        cd luals
        # Only add the main DBM repo as an external library if we are not checking the DBM main repo itself
        # If we check the main repo we still need it declared as a library, but it needs to be in the same path and not a separate copy
        if [[ -d "${{ inputs.luals-check-dir }}/DBM-Core" ]]; then
          libs="${{ inputs.luals-check-dir }}/DBM-Core,${{ inputs.luals-check-dir }}/DBM-StatusBarTimers,${{ github.workspace }}/vscode-wow-api/EmmyLua"
        else
          libs="${{ github.workspace }}/DBM-Main-Repo/DBM-Core,${{ github.workspace }}/DBM-Main-Repo/DBM-StatusBarTimers,${{ github.workspace }}/vscode-wow-api/EmmyLua"
        fi
        rm -f log/check.json
        ./bin/lua-language-server \
          --checklevel Information \
          --configpath "${{ github.workspace }}/luals-config/Check-Config.lua" \
          --dbm_libraries "$libs" \
          --trust_all_plugins \
          --check "${{ inputs.luals-check-dir }}" \
          ${{ inputs.extra-args }}
        STATUS=0
        if [[ -e log/check.json ]] ; then
          STATUS=1
        fi
        touch log/check.json
        # Warnings as readable outsputs because GitHub doesn't show any metadata in the log when emitting annotations and limits annotations to 10 or so
        cat ${{ github.workspace }}/luals/log/check.json | \
          jq -r 'to_entries | map(.key as $file | .value[] | {file: $file | sub("file://${{ github.workspace }}/workspace/"; ""), title: .code, line: .range.start.line, endLine: .range.end.line, col: .range.start.character, endColumn: .range.end.character, message: .message, level: (if .severity <= 1 then "Error" else "Warning" end)}) | map("\(.level): \(.file):\(.line+1):\(.col+1) \(.title) - \(.message)") | .[]' \
          | tee $GITHUB_STEP_SUMMARY
        if [[ $STATUS == 0 ]] ; then
          echo "âœ… All checks succeeded!" | tee $GITHUB_STEP_SUMMARY
        fi
        # GitHub annotations
        cat ${{ github.workspace }}/luals/log/check.json |  jq -r 'to_entries | map(.key as $file | .value[] | {file: $file | sub("file://${{ github.workspace }}/workspace/"; ""), title: .code, line: .range.start.line, endLine: .range.end.line, col: .range.start.character, endColumn: .range.end.character, message: .message | gsub("\n"; "\\\\n"; "m"), level: (if .severity <= 1 then "error" else "warning" end)}) | map("::\(.level) file=\(.file),line=\(.line+1),endLine=\(.line+1),col=\(.col+1),endColumn=\(.endColumn+1),title=\(.title)::\(.message)") | .[]'
        rm -rf log/*
        exit $STATUS
